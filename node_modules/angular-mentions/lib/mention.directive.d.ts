import { ComponentFactoryResolver, ElementRef, TemplateRef, ViewContainerRef } from "@angular/core";
import { EventEmitter, OnChanges, SimpleChanges } from "@angular/core";
import { MentionConfig } from "./mention-config";
/**
 * Angular Mentions.
 * https://github.com/dmacfarlane/angular-mentions
 *
 * Copyright (c) 2017 Dan MacFarlane
 */
import * as ɵngcc0 from '@angular/core';
export declare class MentionDirective implements OnChanges {
    private _element;
    private _componentResolver;
    private _viewContainerRef;
    private mentionItems;
    set mention(items: any[]);
    mentionConfig: MentionConfig;
    private activeConfig;
    private DEFAULT_CONFIG;
    mentionListTemplate: TemplateRef<any>;
    searchTerm: EventEmitter<string>;
    itemSelected: EventEmitter<any>;
    opened: EventEmitter<any>;
    closed: EventEmitter<any>;
    private triggerChars;
    private searchString;
    private startPos;
    private startNode;
    private searchList;
    private searching;
    private iframe;
    private lastKeyCode;
    constructor(_element: ElementRef, _componentResolver: ComponentFactoryResolver, _viewContainerRef: ViewContainerRef);
    ngOnChanges(changes: SimpleChanges): void;
    updateConfig(): void;
    private addConfig;
    setIframe(iframe: HTMLIFrameElement): void;
    stopEvent(event: any): void;
    blurHandler(event: any): void;
    inputHandler(event: any, nativeElement?: HTMLInputElement): void;
    keyHandler(event: any, nativeElement?: HTMLInputElement): boolean;
    startSearch(triggerChar?: string, nativeElement?: HTMLInputElement): void;
    stopSearch(): void;
    updateSearchList(): void;
    showSearchList(nativeElement: HTMLInputElement): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MentionDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MentionDirective, "[mention], [mentionConfig]", never, { "mentionConfig": "mentionConfig"; "mention": "mention"; "mentionListTemplate": "mentionListTemplate"; }, { "searchTerm": "searchTerm"; "itemSelected": "itemSelected"; "opened": "opened"; "closed": "closed"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudGlvbi5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsibWVudGlvbi5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEVsZW1lbnRSZWYsIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1lbnRpb25Db25maWcgfSBmcm9tIFwiLi9tZW50aW9uLWNvbmZpZ1wiO1xuLyoqXG4gKiBBbmd1bGFyIE1lbnRpb25zLlxuICogaHR0cHM6Ly9naXRodWIuY29tL2RtYWNmYXJsYW5lL2FuZ3VsYXItbWVudGlvbnNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgRGFuIE1hY0ZhcmxhbmVcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWVudGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBfZWxlbWVudDtcbiAgICBwcml2YXRlIF9jb21wb25lbnRSZXNvbHZlcjtcbiAgICBwcml2YXRlIF92aWV3Q29udGFpbmVyUmVmO1xuICAgIHByaXZhdGUgbWVudGlvbkl0ZW1zO1xuICAgIHNldCBtZW50aW9uKGl0ZW1zOiBhbnlbXSk7XG4gICAgbWVudGlvbkNvbmZpZzogTWVudGlvbkNvbmZpZztcbiAgICBwcml2YXRlIGFjdGl2ZUNvbmZpZztcbiAgICBwcml2YXRlIERFRkFVTFRfQ09ORklHO1xuICAgIG1lbnRpb25MaXN0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgc2VhcmNoVGVybTogRXZlbnRFbWl0dGVyPHN0cmluZz47XG4gICAgaXRlbVNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvcGVuZWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNsb3NlZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJpdmF0ZSB0cmlnZ2VyQ2hhcnM7XG4gICAgcHJpdmF0ZSBzZWFyY2hTdHJpbmc7XG4gICAgcHJpdmF0ZSBzdGFydFBvcztcbiAgICBwcml2YXRlIHN0YXJ0Tm9kZTtcbiAgICBwcml2YXRlIHNlYXJjaExpc3Q7XG4gICAgcHJpdmF0ZSBzZWFyY2hpbmc7XG4gICAgcHJpdmF0ZSBpZnJhbWU7XG4gICAgcHJpdmF0ZSBsYXN0S2V5Q29kZTtcbiAgICBjb25zdHJ1Y3RvcihfZWxlbWVudDogRWxlbWVudFJlZiwgX2NvbXBvbmVudFJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIF92aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICB1cGRhdGVDb25maWcoKTogdm9pZDtcbiAgICBwcml2YXRlIGFkZENvbmZpZztcbiAgICBzZXRJZnJhbWUoaWZyYW1lOiBIVE1MSUZyYW1lRWxlbWVudCk6IHZvaWQ7XG4gICAgc3RvcEV2ZW50KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGJsdXJIYW5kbGVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGlucHV0SGFuZGxlcihldmVudDogYW55LCBuYXRpdmVFbGVtZW50PzogSFRNTElucHV0RWxlbWVudCk6IHZvaWQ7XG4gICAga2V5SGFuZGxlcihldmVudDogYW55LCBuYXRpdmVFbGVtZW50PzogSFRNTElucHV0RWxlbWVudCk6IGJvb2xlYW47XG4gICAgc3RhcnRTZWFyY2godHJpZ2dlckNoYXI/OiBzdHJpbmcsIG5hdGl2ZUVsZW1lbnQ/OiBIVE1MSW5wdXRFbGVtZW50KTogdm9pZDtcbiAgICBzdG9wU2VhcmNoKCk6IHZvaWQ7XG4gICAgdXBkYXRlU2VhcmNoTGlzdCgpOiB2b2lkO1xuICAgIHNob3dTZWFyY2hMaXN0KG5hdGl2ZUVsZW1lbnQ6IEhUTUxJbnB1dEVsZW1lbnQpOiB2b2lkO1xufVxuIl19